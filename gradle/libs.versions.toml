[versions]
# SDK Versions
minSdk = "26"
targetSdk = "33"
compileSdk = "33"

# Dependencies
kotlin = "1.7.20"
# KMP
coroutines = "1.6.4"
kotlinxDateTime = "0.4.0"
kotlinxSerialization = "1.4.1"
koin = "3.2.2"
ktor = "2.1.2"
mokoParcelize = "0.8.0"
multiplatformSettings = "1.0.0-RC"
napier = "2.6.1"
sqlDelight = "1.5.4"

# Tools
androidGradle = "7.2.2"
bugfender = "3.0.16"

# https://firebase.google.com/docs/android/setup#kotlin+ktx_2
firebaseCrashlyticsGradle = "2.9.2"
firebaseBOM = "30.0.1"
googleServices = "4.3.14"
gradleVersions = "0.42.0"
junit = "4.13.2"
ktlintGradle = "11.0.0"
roboelectric = "4.9"
timber = "5.0.1"

# AndroidX
# https://developer.android.com/jetpack/androidx/versions
activity = "1.6.0"
appcompat = "1.5.1"
constraintLayout = "2.1.4"
core = "1.9.0"
fragment = "1.5.3"
lifecycle = "2.5.1"
lifecycleextensions = "2.2.0"
navigation = "2.5.2"
material = "1.8.0-alpha01"
percentLayout = "1.0.0"
preference = "1.2.0"
recyclerView = "1.2.1"
swipeLayout = "1.1.0"
testJunit = "1.1.3"
work = "2.7.1"

# Compose
# https://developer.android.com/jetpack/androidx/versions
compose = "1.2.1"
composeCompiler = "1.3.2"
composeFoundation = "1.2.1"
composeMaterial = "1.2.1"
composeRuntime = "1.2.1"
composeUi = "1.2.1"

# Google
accompanistSwipe = "0.23.1"
androidDesugar = "1.1.5"
googleBilling = "4.0.0"
gson = "2.8.6"
permissionsDispatcher = "4.9.1"
playMaps = "18.1.0"
playLocation = "20.0.0"

# Third-party
advancedRecycler = "1.0.0"
materialDialogs = "3.2.1"
shimmer = "0.5.0"
tooltip = "0.1.9"

# ISD
nrstations = "0.0.1"
nrservices = "0.0.1"

[libraries]
# 1st party libs
intsoftdev-stations = { module = "com.intsoftdev:nrstations", version.ref = "nrstations" }
intsoftdev-services = { module = "com.intsoftdev:nrservices", version.ref = "nrservices" }

# KMP
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-common-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kolinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

moko-parcelize = { module = "dev.icerock.moko:parcelize", version.ref = "mokoParcelize" }

multiplatformSettings-common = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
multiplatformSettings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettings" }

napier-logger = { module = "io.github.aakira:napier", version.ref = "napier" }

sqlDelight-android = { module = "com.squareup.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-coroutinesExt = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-native = { module = "com.squareup.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-runtime = { module = "com.squareup.sqldelight:runtime", version.ref = "sqlDelight" }

# Koin DI
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# AndroidX
androidx-activity-exts = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
androidx-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "core" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
androidx-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleextensions" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navigation" }
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navigation" }
androidx-percentlayout = { module = "androidx.percentlayout:percentlayout", version.ref = "percentLayout" }
androidx-preference = { module = "androidx.preference:preference", version.ref = "preference" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerView" }
androidx-swipelayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeLayout" }
androidx-test-junit = { module = "androidx.test.ext:junit-ktx", version.ref = "testJunit" }
androidx-work = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

# Compose
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
compose-viewbinding = { module = "androidx.compose.ui:ui-viewbinding", version.ref = "compose" }
compose-rx = { module = "androidx.compose.runtime:runtime-rxjava2", version.ref = "compose" }

# Google
google-accompanist-swipeRefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanistSwipe" }
android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "androidDesugar" }
android-billing = { module = "com.android.billingclient:billing-ktx", version.ref = "googleBilling" }
google-gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
android_permissions_dispatcher = { module = "com.github.permissions-dispatcher:permissionsdispatcher", version.ref = "permissionsDispatcher" }
android_permissions_dispatcher_processor = { module = "com.github.permissions-dispatcher:permissionsdispatcher-processor", version.ref = "permissionsDispatcher" }
google_gms_maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playMaps" }
google_gms_location = { module = "com.google.android.gms:play-services-location", version.ref = "playLocation" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBOM" }

# Third-party
material-dialogs = { module = "com.afollestad.material-dialogs:core", version.ref = "materialDialogs" }
facebook-shimmer = { module = "com.facebook.shimmer:shimmer", version.ref = "shimmer" }
android-material = { module = "com.google.android.material:material", version.ref = "material" }
bugfender-sdk = { module = "com.bugfender.sdk:android", version.ref = "bugfender" }
tooltip-library = { module = "com.github.vihtarb:tooltip", version.ref = "tooltip" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
advanced-recycler = { module = "com.h6ah4i.android.widget.advrecyclerview:advrecyclerview", version.ref = "advancedRecycler" }

# Tools
junit = { module = "junit:junit", version.ref = "junit" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
roboelectric = { module = "org.robolectric:robolectric", version.ref = "roboelectric" }

[plugins]
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradle" }
gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradleVersions" }

[bundles]
app-ui = [
    "compose-compiler",
    "compose-ui",
    "compose-tooling",
    "compose-foundation",
    "compose-material",
    "compose-livedata",
    "compose-viewbinding",
    "compose-rx",
    "google-accompanist-swipeRefresh",
    "androidx-core",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-livedata",
    "androidx-lifecycle-extensions",
    "androidx-activity-exts",
    "androidx-compose-activity",
    "androidx-appcompat",
    "android-material",
    "androidx-swipelayout",
    "androidx-constraintlayout",
    "androidx-recyclerview",
    "androidx-navigation-ui",
    "androidx-navigation-fragment"
]
ktor-common = [
    "ktor-client-core",
    "ktor-client-logging",
    "ktor-client-json",
    "ktor-client-serialization",
    "ktor-common-serialization",
    "ktor-client-contentNegotiation",
    "ktor-client-mock"
]
commonTest = [
    "kotlin-test",
    "multiplatformSettings-test",
    "koin-test",
    "coroutines-test"
]
androidTest = [
    "androidx-test-junit",
    "coroutines-test",
    "roboelectric",
    "sqlDelight-jvm"
]
